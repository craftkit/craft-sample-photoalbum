window["Craft"] =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst Craft = __webpack_require__(/*! ./main.js */ \"./main.js\");\n\nmodule.exports = Craft.default || Craft;\n\n\n\n//# sourceURL=webpack://Craft/./index.js?");

/***/ }),

/***/ "./main.js":
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_Craft_Core_Bootstrap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Craft/Core/Bootstrap.js */ \"./src/Craft/Core/Bootstrap.js\");\n/* harmony import */ var _src_Craft_Core_Context_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/Craft/Core/Context.js */ \"./src/Craft/Core/Context.js\");\n/* harmony import */ var _src_Craft_Core_Defaults_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/Craft/Core/Defaults.js */ \"./src/Craft/Core/Defaults.js\");\n/* harmony import */ var _src_Craft_Core_ComponentStack_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/Craft/Core/ComponentStack.js */ \"./src/Craft/Core/ComponentStack.js\");\n/* harmony import */ var _src_Craft_Core_KeyboardManager_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/Craft/Core/KeyboardManager.js */ \"./src/Craft/Core/KeyboardManager.js\");\n/* harmony import */ var _src_Craft_Core_NotificationCenter_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/Craft/Core/NotificationCenter.js */ \"./src/Craft/Core/NotificationCenter.js\");\n/* harmony import */ var _src_Craft_Core_Component_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/Craft/Core/Component.js */ \"./src/Craft/Core/Component.js\");\n/* harmony import */ var _src_Craft_Core_StickComponent_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/Craft/Core/StickComponent.js */ \"./src/Craft/Core/StickComponent.js\");\n/* harmony import */ var _src_Craft_Core_Transition_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/Craft/Core/Transition.js */ \"./src/Craft/Core/Transition.js\");\n/* harmony import */ var _src_Craft_Core_Gesture_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/Craft/Core/Gesture.js */ \"./src/Craft/Core/Gesture.js\");\n/* harmony import */ var _src_Craft_UI_View_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/Craft/UI/View.js */ \"./src/Craft/UI/View.js\");\n/* harmony import */ var _src_Craft_UI_DefaultViewController_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/Craft/UI/DefaultViewController.js */ \"./src/Craft/UI/DefaultViewController.js\");\n/* harmony import */ var _src_Craft_UI_DefaultRootViewController_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./src/Craft/UI/DefaultRootViewController.js */ \"./src/Craft/UI/DefaultRootViewController.js\");\n/* harmony import */ var _src_Craft_UI_ModalViewController_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./src/Craft/UI/ModalViewController.js */ \"./src/Craft/UI/ModalViewController.js\");\n/* harmony import */ var _src_Craft_UI_Device_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./src/Craft/UI/Device.js */ \"./src/Craft/UI/Device.js\");\n\nconst Craft = {};\n\n\n\n\n\n\n\n\n\n\n\n\nCraft.Core = {\n\tBootstrap          : _src_Craft_Core_Bootstrap_js__WEBPACK_IMPORTED_MODULE_0__[\"Bootstrap\"],\n\tContext            : _src_Craft_Core_Context_js__WEBPACK_IMPORTED_MODULE_1__[\"Context\"],\n\tDefaults           : _src_Craft_Core_Defaults_js__WEBPACK_IMPORTED_MODULE_2__[\"Defaults\"],\n\tComponentStack     : _src_Craft_Core_ComponentStack_js__WEBPACK_IMPORTED_MODULE_3__[\"ComponentStack\"],\n\tKeyboardManager    : _src_Craft_Core_KeyboardManager_js__WEBPACK_IMPORTED_MODULE_4__[\"KeyboardManager\"],\n\tNotificationCenter : _src_Craft_Core_NotificationCenter_js__WEBPACK_IMPORTED_MODULE_5__[\"NotificationCenter\"],\n\tComponent          : _src_Craft_Core_Component_js__WEBPACK_IMPORTED_MODULE_6__[\"Component\"],\n\tStickComponent     : _src_Craft_Core_StickComponent_js__WEBPACK_IMPORTED_MODULE_7__[\"StickComponent\"],\n\tTransition         : _src_Craft_Core_Transition_js__WEBPACK_IMPORTED_MODULE_8__[\"Transition\"],\n\tGesture            : _src_Craft_Core_Gesture_js__WEBPACK_IMPORTED_MODULE_9__[\"Gesture\"]\n};\n\n\n\n\n\n\n\nCraft.UI = {\n\tView                      : _src_Craft_UI_View_js__WEBPACK_IMPORTED_MODULE_10__[\"View\"],\n\tDefaultViewController     : _src_Craft_UI_DefaultViewController_js__WEBPACK_IMPORTED_MODULE_11__[\"DefaultViewController\"],\n\tDefaultRootViewController : _src_Craft_UI_DefaultRootViewController_js__WEBPACK_IMPORTED_MODULE_12__[\"DefaultRootViewController\"],\n\tModalViewController       : _src_Craft_UI_ModalViewController_js__WEBPACK_IMPORTED_MODULE_13__[\"ModalViewController\"],\n\tDevice                    : _src_Craft_UI_Device_js__WEBPACK_IMPORTED_MODULE_14__[\"Device\"]\n};\n\nCraft.Widget = {}; // placeholder\n\nCraft.usePackage = function(packages){\n\tpackages.inject(Craft);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Craft);\n\n\n\n//# sourceURL=webpack://Craft/./main.js?");

/***/ }),

/***/ "./src/Craft/Core/Bootstrap.js":
/*!*************************************!*\
  !*** ./src/Craft/Core/Bootstrap.js ***!
  \*************************************/
/*! exports provided: Bootstrap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Bootstrap\", function() { return Bootstrap; });\n/* harmony import */ var _Context_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Context.js */ \"./src/Craft/Core/Context.js\");\n\n\n\n/** \n * The application entry point.\n * \n * Argument for Craft.Core.Bootstrap.boot must have your entry function named as didBootApplication. \n * The function will be called just after the initialization process of Craft-UIKit itself. \n * \n * You may also set you optional value or function in the argument object. \n * It can be retrieved via `Craft.Core.Context.getApp()`.\n * \n * @namespace Craft.Core.Bootstrap\n * @packagename Craft.Core.Bootstrap\n * \n * @example\n * \n * Craft.Core.Bootstrap.boot({\n *     didBootApplication : function(options){\n *         let widget = new MyWidget();\n *         widget.loadView();\n *         document.getElementById('CraftRoot').appendChild(widget.view);\n *     },\n *     token : some_token\n * });\n * \n * const token = Craft.Core.Context.getApp().token;\n * \n */\nvar Bootstrap = {\n\t\n\t/** @private */\n\tpackagename : 'Craft.Core.Bootstrap',\n\t\n\t/**\n\t * @typedef {Object} LaunchEnv\n\t * @property {String} entryPoint - launching hash\n\t */\n\t \n\t/**\n\t * Entry point of Craft-UIKit application.\n\t * \n\t * @memberof Craft.Core.Bootstrap\n\t * @method Craft.Core.Bootstrap.boot\n\t * \n\t * @param {Object} app - your application bootloader with didBootApplication\n\t * @param {Function} app.didBootApplication - your bootstrap\n\t * @return {LaunchEnv} - info about launch environment\n\t */\n\tboot : function(app){\n\t\tif( !app ){\n\t\t\tthrow \"no app\";\n\t\t}\n\t\t_Context_js__WEBPACK_IMPORTED_MODULE_0__[\"Context\"].setApp(app);\n\t\t\n\t\t// get launch hash.\n\t\t// this is just for your convenience. you may use `window.location` in your `didBootApplication` function.\n\t\tlet hash = window.location.hash;\n\t\tlet match = hash.match(/^#\\/(.*)/);\n\t\tlet entryPoint = '';\n\t\tif( match ){\n\t\t\tentryPoint = match[1];\n\t\t}\n\t\t\n\t\t// ok, launch the application\n\t\t_Context_js__WEBPACK_IMPORTED_MODULE_0__[\"Context\"].getApp().didBootApplication({entryPoint:entryPoint});\n\t}\n\t\n};\n\n\n\n//# sourceURL=webpack://Craft/./src/Craft/Core/Bootstrap.js?");

/***/ }),

/***/ "./src/Craft/Core/Component.js":
/*!*************************************!*\
  !*** ./src/Craft/Core/Component.js ***!
  \*************************************/
/*! exports provided: Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Component\", function() { return Component; });\n/* harmony import */ var _ComponentStack_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ComponentStack.js */ \"./src/Craft/Core/ComponentStack.js\");\n\n\n\n/** \n * Component super class.\n * \n * @packagename Craft.Core.Component\n */\nclass Component {\n\t\n\t/**\n\t * Component constructor.\n\t */\n\tconstructor(){\n\t\tthis.packagename    = ''; // overrided to use package name instead of class name\n\t\tthis.componentId    = ''; // unique identifier defined by name and serial\n\t\tthis.name           = ''; // conceptional name, automatically generated by init() according to the this.packagename\n\t\tthis.viewController = ''; // optional. viewController this component is managed by. would be set by viewController or by yourself.\n\t\tthis.isViewLoaded   = false; // true after init() and render() was called\n\t\tthis.visible        = false; // true while visible\n\t\t\n\t\tthis.view   = document.createElement('div');            // shadow host\n\t\tthis.root   = '';                                       // component root based on `template`\n\t\tthis.shadow = this.view.attachShadow({ mode: 'open' }); // shadow root\n\t\tthis.css    = '';                                       // array of style\n\t}\n\t\n\t/**\n\t * Initialize instance values \n\t * \n\t * You should never call directly and override this method. \n\t * This is a part of `loadView` the initialization processs, but separated for readability. \n\t * Use `viewDidLoad` for your additional initialization.\n\t * \n\t * (highly recommended to be implemented as synchronous)\n\t */\n\tinit(){\n\t\tif( this.packagename ){\n\t\t\tthis.name = this.packagename.replace(/[\\/\\.]/g,'_'); // id should not have dot\n\t\t}else{\n\t\t\tthis.name = this.constructor.name;\n\t\t}\n\t\tthis.componentId = this.name + '_' + _ComponentStack_js__WEBPACK_IMPORTED_MODULE_0__[\"ComponentStack\"].nextSerial();\n\t\t_ComponentStack_js__WEBPACK_IMPORTED_MODULE_0__[\"ComponentStack\"].set(this.componentId,this);\n\t\t\n\t\tthis.view.id = this.componentId;\n\t}\n\t\n\t/**\n\t * Render RootView and load stylesheet.\n\t * \n\t * `template()` and `style()` can access to its instance variables via `this`. \n\t * \n\t * (highly recommended to be implemented as synchronous)\n\t */\n\trender(){\n\t\tthis.loadStyle();\n\t\tthis.renderView();\n\t}\n\t\n\t/**\n\t * Render template and get the shadow DOM. \n\t * If you call this method, your shadow dom will be cleared. (including scoped style)\n\t */\n\trenderView(){\n\t\tlet html = this.template(this.componentId).trim();\n\t\tlet tmpl = document.createElement('template');\n\t\ttmpl.innerHTML = html;\n\t\t\n\t\tif( this.root ){ this.root.remove(); }\n\t\t\n\t\tthis.root = tmpl.content.firstChild;\n\t\t\n\t\tthis.shadow.appendChild(this.root);\n\t}\n\t\n\t/**\n\t * Load style defined in this instance\n\t */\n\tloadStyle(){\n\t\tif( this.style ){\n\t\t\tthis.appendStyle( this.style(this.componentId) );\n\t\t}\n\t}\n\t\n\t/**\n\t * Load style from text and append to the shadow root\n\t * \n\t * @param {String} style - stylesheet text expression\n\t * @param {String} id - id for the style tag (optional)\n\t */\n\tappendStyle(style,id){\n\t\tif( id ){\n\t\t\tlet element = this.view.getElementById(id);\n\t\t\tif( element ){ this.view.removeChild(element); }\n\t\t}\n\t\tlet element = document.createElement('style');\n\t\telement.textContent = style;\n\t\telement.id = id || this.componentId + '_' + _ComponentStack_js__WEBPACK_IMPORTED_MODULE_0__[\"ComponentStack\"].nextSerial();\n\t\tthis.shadow.appendChild(element);\n\t\t\n\t\tif( !this.css ){ this.css = []; }\n\t\tthis.css.push(element);\n\t}\n\t\n\t/**\n\t * Remove all styles\n\t */\n\tunloadStyle(){\n\t\tif( this.css ){\n\t\t\tfor( let i=0; i<this.css.length; i++ ){\n\t\t\t\tthis.css[i].remove();\n\t\t\t}\n\t\t\tthis.css = '';\n\t\t}\n\t}\n\t\n\t/** \n\t * Make this.view(RootView) and this.css.\n\t * \n\t * ViewController or component consumer should call this method just after instantiate the component,\n\t * or whenever you want to use the instance of this component that is not yet ready (isViewLoaded is false).\n\t * \n\t * You should not never override this method. \n\t * Use `viewDidLoad` for your additional initialization.\n\t * \n\t * If you have to implement your own loadView method, you must implement yours as:\n\t * \n\t * 1. this.init();  \n\t * 2. this.render();  \n\t *    (here, you can access to the RootView of this component)  \n\t *    (your component setup in here)  \n\t * 3. set isViewLoaded to true.  \n\t * 4. call this.viewDidLoad(callback);  \n\t * \n\t * and incomming callback should be passed to the viewDidLoad.\n\t * \n\t * (this is highly recommended to be implemented as synchronous)\n\t * \n\t * @summary Make this.view(RootView) and this.css\n\t * @argument {Function} callback - callback\n\t */\n\tloadView(callback){\n\t\tthis.init();\n\t\tthis.render();\n\t\tthis.isViewLoaded = true;\n\t\tthis.viewDidLoad(callback);\n\t}\n\t\n\t/**\n\t * Remove this.view (shadow DOM) from the Shadow host, and clear memory.\n\t * \n\t * @argument {Function} callback - callback\n\t */ \n\tunloadView(callback){\n\t\tthis.viewWillDisappear();\n\t\tthis.view.remove();\n\t\tthis.viewDidDisappear();\n\t\tthis.view = '';\n\t\tthis.isViewLoaded = false;\n\t\t_ComponentStack_js__WEBPACK_IMPORTED_MODULE_0__[\"ComponentStack\"].del(this.componentId);\n\t\tif( callback ){ callback() }\n\t}\n\t\n\t/**\n\t * Lifecycle method:  \n\t * Called at the end of loadView. Component instance loaded and ready to use this.view. \n\t * \n\t * You have to call callback at the end of yours.\n\t * \n\t * @argument {Function} callback - callback\n\t */\n\tviewDidLoad(callback){\n\t\tif( callback ){ callback() }\n\t}\n\t\n\t/**\n\t * Lifecycle method:  \n\t * Called just before appending this.view to the parent. \n\t * \n\t * You *must* call callback at the end of yours.\n\t * \n\t * Component RootView is now on the screen (in the browser DOM tree), \n\t * and concrete ViewController should ensure to be able to access this.view via global DOM tree after here.\n\t * \n\t * @argument {Function} callback - callback\n\t */\n\tviewWillAppear(callback){\n\t\tif( callback ){ callback() }\n\t}\n\t\n\t/**\n\t * Lifecycle method:  \n\t * Called just after this.view appended to the parent.  \n\t * After this method, you can access the compoenent's RootView via document.getElementByID and some other query selectors. \n\t * \n\t * You have to call callback at the end of yours.\n\t * \n\t * @argument {Function} callback - callback\n\t */\n\tviewDidAppear(callback){\n\t\tif( callback ){ callback() }\n\t}\n\t\n\t/**\n\t * Lifecycle method:  \n\t * Called just before removing this.view from its parent.  \n\t * You may remove your listener defined in viewWillAppear or viewDidAppear. \n\t * \n\t * You have to call callback at the end of yours.\n\t * \n\t * @argument {Function} callback - callback\n\t */\n\tviewWillDisappear(callback){\n\t\tif( callback ){ callback() }\n\t}\n\t\n\t/**\n\t * Lifecycle method:  \n\t * Called just after this.view removed from its parent.\n\t * \n\t * You have to call callback at the end of yours.\n\t * \n\t * @argument {Function} callback - callback\n\t */\n\tviewDidDisappear(callback){\n\t\tif( callback ){ callback() }\n\t}\n\t\n\t/**\n\t * Show this component.\n\t * \n\t * @argument {Function} callback - callback\n\t */\n\tshow(callback){\n\t\tthis.view.style.display = 'block';\n\t\tthis.visible = true;\n\t\tif( callback ){ callback() }\n\t}\n\t\n\t/**\n\t * Hide this component.\n\t * \n\t * @argument {Function} callback - callback\n\t */\n\thide(callback){\n\t\tthis.view.style.display = 'none';\n\t\tthis.visible = false;\n\t\tif( callback ){ callback() }\n\t}\n\t\n\t/**\n\t * Append sub-view to this.view.\n\t * \n\t * @param {Object} options - option\n\t * @param {Element} options.target - target element to place the view\n\t * @param {Craft.UI.Componenet} options.component - sub view\n\t * @param {Function} callback - callback\n\t * @summary Append sub-view to this.view\n\t * \n\t * @example\n\t * \n\t * // append btn.view at the end of panel.view.\n\t * \n\t * panel.appendView(btn);\n\t * \n\t * // append btn.view in '#btn' under the ShadwRoot\n\t * \n\t * this.appendView({\n\t *     target    : this.shadow.getElementById('btn'),\n\t *     component : btn\n\t * });\n\t * \n\t * // if you know the structrue of panel.view, you can append btn.view directly into the deep point of the panel.\n\t * \n\t * panel.appendView({\n\t *     target    : panel.shadow.getElementById('btn'),\n\t *     component : btn\n\t * });\n\t * \n\t */\n\tappendView(options){\n\t\tif( !options ){ return; }\n\t\tlet target, component, callback;\n\t\t\n\t\tif( options instanceof Component ){\n\t\t\ttarget    = this.root;\n\t\t\tcomponent = options;\n\t\t}else{\n\t\t\ttarget    = options.target || this.root;\n\t\t\tcomponent = options.component;\n\t\t\tcallback  = options.callback;\n\t\t}\n\t\t\n\t\tif( !component.isViewLoaded ){\n\t\t\tcomponent.loadView();\n\t\t}\n\t\t\n\t\tcomponent.viewWillAppear( () => {\n\t\t\tcomponent.show();\n\t\t\ttarget.appendChild(component.view);\n\t\t\tif( callback ){ callback(); }\n\t\t\tcomponent.viewDidAppear();\n\t\t});\n\t}\n\t\n\t/** \n\t * alias for appendView\n\t */\n\tappend(options){\n\t\tthis.appendView(options);\n\t}\n\t\n\t/**\n\t * Remove a sub-view from this.view\n\t * \n\t * `removeView` does not call unloadView of the removed view.\n\t * When to parge the component is a responsibility of your component consumer.\n\t * \n\t * @param {Object} options - option or remove target Componenet\n\t * @param {Craft.UI.Componenet} options.component - Component to be removed\n\t * @param {Function} callback - callback\n\t * @summary Remove a sub-view from this.view\n\t * \n\t * @example\n\t * \n\t * // remove this.btn.view from this.view. \n\t * \n\t * this.removeView(this.btn);\n\t * \n\t * // you can also remove btn view by tis DOm method\n\t * \n\t * btn.view.remove();\n\t * \n\t */\n\tremoveView(options){\n\t\tif( !options ){ return; }\n\t\tlet target, component, callback;\n\t\t\n\t\tif( options instanceof Component ){\n\t\t\tcomponent = options;\n\t\t}else{\n\t\t\tcomponent = options.component;\n\t\t\tcallback  = options.callback;\n\t\t}\n\t\t\n\t\tcomponent.viewWillDisappear( () => {\n\t\t\tcomponent.hide();\n\t\t\tcomponent.view.remove();\n\t\t\tif( callback ){ callback(); }\n\t\t\tcomponent.viewDidDisappear();\n\t\t});\n\t}\n\t\n\t/** \n\t * alias for removeView\n\t */\n\tremove(options){\n\t\tthis.removeView(options);\n\t}\n\t\n\t/**\n\t * Stylesheet definition.\n\t * \n\t * If you would like to cascade styles from parent class, just append super.style\n\t * \n\t * ``` \n\t * style(componentId){\n\t *     return　super.style(componentId) + `\n\t *         .override { ... }\n\t *     `;\n\t * }\n\t * ```\n\t * \n\t * @param {String} componentId - this.componentId\n\t */\n\tstyle(componentId){ return `.root {}`; }\n\t\n\t/**\n\t * RootView template.\n\t * \n\t * `template` must have only one element.\n\t * \n\t * @param {String} componentId - this.componentId\n\t */\n\ttemplate(componentId){ return `<div class=\"root\"></div>`; }\n}\n\n\n\n//# sourceURL=webpack://Craft/./src/Craft/Core/Component.js?");

/***/ }),

/***/ "./src/Craft/Core/ComponentStack.js":
/*!******************************************!*\
  !*** ./src/Craft/Core/ComponentStack.js ***!
  \******************************************/
/*! exports provided: ComponentStack */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ComponentStack\", function() { return ComponentStack; });\n/* harmony import */ var _Defaults_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Defaults.js */ \"./src/Craft/Core/Defaults.js\");\n\n\n\n/** \n * Provides global Component access.  \n * You may love to set`Craft.Core.Defaults.ALLOW_COMPONENT_SHORTCUT = true` to be able to access component via its id.\n * \n * ### Example in your template\n * \n * ``` \n * <!-- fully qualified -->\n * <div onclick=\"window.Craft.Core.ComponentStack.get('${componentId}').action()\">action</div>\n * \n * <!-- ALLOW_COMPONENT_SHORTCUT is true -->\n * <div onclick=\"${componentId}.action()\">action</div>\n * ``` \n * \n * @namespace Craft.Core.ComponentStack\n * @packagename Craft.Core.ComponentStack\n * \n */\nvar ComponentStack = {\n\t\n\t/** @private */\n\tpackagename : 'Craft.Core.ComponentStack',\n\t\n\t/** @private */\n\tcounter : 0,\n\t\n\t/** @private */\n\tcontainer : {},\n\t\n\t/**\n\t * Shortcut for set\n\t * \n\t * @memberof Craft.Core.ComponentStack\n\t * @method Craft.Core.ComponentStack.push\n\t */\n\tpush : function(component){\n\t\tthis.container[component.componentId] = component;\n\t},\n\n\t/**\n\t * Set component into the stack\n\t * \n\t * @memberof Craft.Core.ComponentStack\n\t * @method Craft.Core.ComponentStack.set\n\t * \n\t * @param {String} componentId - componentId\n\t * @param {Craft.Core.Component} component - component\n\t */\n\tset : function(componentId,component){\n\t\tthis.container[componentId] = component;\n\t\tif( _Defaults_js__WEBPACK_IMPORTED_MODULE_0__[\"Defaults\"].ALLOW_COMPONENT_SHORTCUT ){\n\t\t\twindow[componentId] = component;\n\t\t}\n\t},\n\t\n\t/**\n\t * Get component from the stack\n\t * \n\t * @memberof Craft.Core.ComponentStack\n\t * @method Craft.Core.ComponentStack.get\n\t * \n\t * @param {string} componentId - componentId\n\t */\n\tget : function(componentId){\n\t\treturn this.container[componentId];\n\t},\n\t\n\t/**\n\t * Delete component from the stack\n\t * \n\t * @memberof Craft.Core.ComponentStack\n\t * @method Craft.Core.ComponentStack.del\n\t * \n\t * @param {string} componentId - componentId\n\t */\n\tdel : function(componentId){\n\t\tdelete this.container[componentId];\n\t\tif( _Defaults_js__WEBPACK_IMPORTED_MODULE_0__[\"Defaults\"].ALLOW_COMPONENT_SHORTCUT ){\n\t\t\tdelete window[componentId];\n\t\t}\n\t},\n\t\n\t/**\n\t * Publish new serial number. Actual componentId will be made by its packagename.\n\t * \n\t * @memberof Craft.Core.ComponentStack\n\t * @method Craft.Core.ComponentStack.nextSerial\n\t * \n\t * @return {Number}\n\t */\n\tnextSerial : function(){\n\t\treturn this.counter++;\n\t}\n\t\n};\n\n\n//# sourceURL=webpack://Craft/./src/Craft/Core/ComponentStack.js?");

/***/ }),

/***/ "./src/Craft/Core/Context.js":
/*!***********************************!*\
  !*** ./src/Craft/Core/Context.js ***!
  \***********************************/
/*! exports provided: Context */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Context\", function() { return Context; });\n/* harmony import */ var _Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Defaults */ \"./src/Craft/Core/Defaults.js\");\n\n\n\n/** \n * Application context.\n * \n * @namespace Craft.Core.Context\n * @packagename Craft.Core.Context\n */\nvar Context = {\n\t\n\t/** @private */\n\tpackagename : 'Craft.Core.Context',\n\t\n\t/** \n\t * RootViewController of this application.\n\t * @private\n\t */\n\trootViewController : '',\n\t\n\t/** \n\t * Concrete application boot loader.\n\t * @private \n\t */\n\tapp : '', \n\t\n\t/**\n\t * Set your application bootloader.\n\t * \n\t * @memberof Craft.Core.Context\n\t * @method Craft.Core.Context.setApp\n\t * \n\t * @param {Object} app - your application bootloader\n\t * @param {Function} app.didBootApplication - called jsut after core system booted\n\t */\n\tsetApp : function(app){\n\t\tthis.app = app;\n\t},\n\t\n\t/**\n\t * Get your application bootloader.\n\t * \n\t * @memberof Craft.Core.Context\n\t * @method Craft.Core.Context.getApp\n\t * \n\t * @return {Object} app - your application bootloader\n\t */\n\tgetApp : function(){\n\t\treturn this.app;\n\t},\n\t\n\t/**\n\t * Setting Root-Element of your app.\n\t * If you have your RootViewController, \n\t * Craft.Core.Context.setRootViewController() will set Root-Element according to Craft.Core.Default.BASE_DIV_NAME.\n\t * Otherwise, this is optional.\n\t * \n\t * @memberof Craft.Core.Context\n\t * @method Craft.Core.Context.setRootElement\n\t * \n\t * @param {Element} rootElement \n\t */\n\tsetRootElement : function(rootElement){\n\t\tthis.rootElement = rootElement;\n\t},\n\t\n\t/**\n\t * Getting Root-Element of your app.\n\t * \n\t * @memberof Craft.Core.Context\n\t * @method Craft.Core.Context.getRootElement\n\t * \n\t * @return {Element} rootElement \n\t */\n\tgetRootElement : function(){\n\t\treturn this.rootElement;\n\t},\n\t\n\t/**\n\t * Setting RootViewController of you application. \n\t * \n\t * If you want to manage popstate and history, you have to set your RootViewController implementing appropriate interface.\n\t * @see {@link Craft.UI.DefaultViewController}\n\t * \n\t * @memberof Craft.Core.Context\n\t * @method Craft.Core.Context.setRootViewController\n\t * \n\t * @param {Craft.UI.ViewController} rootViewController - rootViewController#resolveRoutingRequest required\n\t */\n\tsetRootViewController : function(rootViewController){\n\t\tthis.rootViewController = rootViewController;\n\t\tif( !this.rootElement ){\n\t\t\tthis.rootElement = document.getElementById(_Defaults__WEBPACK_IMPORTED_MODULE_0__[\"Defaults\"].BASE_DIV_NAME);\n\t\t}\n\t\tif( !rootViewController.isViewLoaded ){\n\t\t\trootViewController.loadView();\n\t\t}\n\t\tthis.rootElement.appendChild(rootViewController.view);\n\t\t\n\t\t// delegate popstate event to the RootViewController\n\t\twindow.addEventListener('popstate',(event) => {\n\t\t\trootViewController.didReceivePopstate(event);\n\t\t});\n\t},\n\t\n\t/**\n\t * Getting RootViewController.\n\t * \n\t * @memberof Craft.Core.Context\n\t * @method Craft.Core.Context.getRootViewController\n\t * \n\t * @return {Craft.UI.ViewController} - RootViewController of you application\n\t */\n\tgetRootViewController : function(){\n\t\treturn this.rootViewController;\n\t}\n\t\n};\n\n\n\n//# sourceURL=webpack://Craft/./src/Craft/Core/Context.js?");

/***/ }),

/***/ "./src/Craft/Core/Defaults.js":
/*!************************************!*\
  !*** ./src/Craft/Core/Defaults.js ***!
  \************************************/
/*! exports provided: Defaults */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Defaults\", function() { return Defaults; });\n\n/** \n * Application default valiables.\n * \n * @namespace Craft.Core.Defaults\n * @packagename Craft.Core.Defaults\n * \n * @example\n * \n * Craft.Core.Defaults.BASE_DIV_NAME = 'CraftRoot';\n * Craft.Core.Defaults.ALLOW_COMPONENT_SHORTCUT = true;\n * \n */\nvar Defaults = {\n\t\n\t/** @private */\n\tpackagename : 'Craft.Core.Defaults',\n\t\n\t/**\n\t * Element.id of the root element. \n\t * It is recommended to use default (CraftRoot).\n\t * \n\t * @memberof Craft.Core.Defaults\n\t * @member Craft.Core.Defaults.BASE_DIV_NAME\n\t * \n\t * @example\n\t * \n\t * // at your bootloader\n\t * Craft.Core.Defaults.BASE_DIV_NAME = 'ROOT';\n\t * \n\t * // at any place\n\t * let rootElement = document.getElementById(Craft.Core.Defaults.BASE_DIV_NAME);\n\t * \n\t * // if your RootViewController is managed by Craft.Core.Context, you may get the same result by:\n\t * let rootElement = Craft.Core.Contest.getRootElement();\n\t * \n\t */\n\tBASE_DIV_NAME : 'CraftRoot',\n\t\n\t/**\n\t * Whether to use component shortcut in HTML. \n\t * True to set `window['componentId'] = component`, to be able to use `${componentId}.method()` in template. \n\t * This is set to false by default, but it is recommended to set to true at the start of your application bootloader.\n\t * \n\t * @memberof Craft.Core.Defaults\n\t * @member Craft.Core.Defaults.ALLOW_COMPONENT_SHORTCUT\n\t */\n\tALLOW_COMPONENT_SHORTCUT : false,\n\t\n};\n\n\n\n//# sourceURL=webpack://Craft/./src/Craft/Core/Defaults.js?");

/***/ }),

/***/ "./src/Craft/Core/Gesture.js":
/*!***********************************!*\
  !*** ./src/Craft/Core/Gesture.js ***!
  \***********************************/
/*! exports provided: Gesture */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Gesture\", function() { return Gesture; });\n\n/** \n * Entry point for gesture.\n * \n * @namespace Craft.Core.Gesture\n * @packagename Craft.Core.Gesture\n */\nvar Gesture = {\n\t\n\t/** @private */\n\tpackagename : 'Craft.Core.Gesture',\n\t\n\t/**\n\t * Enable tap\n\t * \n\t * @memberof Craft.Core.Gesture\n\t * @method Craft.Core.Gesture.enableTap\n\t * \n\t * @param {Element} options.target - target element\n\t * @param {Function} options.tap - tap handler\n\t * @return {Craft.Core.Gesture.Swipe} swipe handling instance (see code)\n\t * \n\t * @example\n\t * \n\t * Craft.Core.Gesture.enableTap({\n\t *     target : this.view.querySelector('#id'),\n\t *     tap    : tapHandler\n\t * });\n\t * \n\t */\n\tenableTap : function(options){\n\t\treturn new Tap(options);\n\t},\n\t\n\t/**\n\t * Enable swipe\n\t * \n\t * @memberof Craft.Core.Gesture\n\t * @method Craft.Core.Gesture.enableSwipe\n\t * \n\t * @param {Element} options.target - target element\n\t * @param {Number} options.left - swipe left hander\n\t * @param {Number} options.right - swipe right hander\n\t * @param {Number} options.up - swipe up hander\n\t * @param {Number} options.down - swipe down hander\n\t * @param {Number} options.DIFF_THRESHOLD - movement should more than this\n\t * @param {Number} options.TIME_THRESHOLD - time should be more than this\n\t * @param {Number} options.MULTI_THRESHOLD - last multi-touch more than before\n\t * @return {Craft.Core.Gesture.Tap} tap handling instance (see code)\n\t * \n\t * @example\n\t * \n\t * Craft.Core.Gesture.enableSwipe({\n\t *     target : this.view.querySelector('#id'),\n\t *     left   : swipeLeftHandler,\n\t *     right  : swipeRgihtHandler,\n\t *     up     : swipeUpHandler,\n\t *     down   : swipeDownHandler,\n\t * });\n\t * \n\t */\n\tenableSwipe : function(options){\n\t\treturn new Swipe(options);\n\t}\n\t\n};\n\n/** \n * Internal class for handling tap \n * @private\n */\nclass Tap {\n\t\n\t/**\n\t * Make tap handler instance\n\t * @param {Element} options.target - target element\n\t * @param {Function} options.tap - tap handler\n\t */\n\tconstructor(options){\n\t\tthis.packagename = 'Craft.Core.Gesture.Tap';\n\t\t\n\t\tthis.target     = options.target;\n\t\tthis.tapHandler = options.tap;\n\t\t\n\t\tif( 'ontouchend' in window ){\n\t\t\tthis.target.addEventListener('touchend', this.handleTouchEnd.bind(this), false); // mobile\n\t\t}else{\n\t\t\tthis.target.addEventListener('mouseup', this.handleTouchEnd.bind(this), false); // pc\n\t\t}\n\t}\n\t\n\t/**\n\t * Call by tap event\n\t * @param {UIEvent} event - TouchEvent|MouseEvent\n\t */\n\thandleTouchEnd(event){\n\t\tif( this.tapHandler ){\n\t\t\tthis.tapHandler(event);\n\t\t}\n\t}\n};\n\n/** \n * Internal clss for handling swipe \n * @private\n */\nclass Swipe {\n\t\n\t/**\n\t * Make swipe handler instance\n\t * @param {Element} options.target - target element\n\t * @param {Function} options.left - swipe left hander\n\t * @param {Function} options.right - swipe right hander\n\t * @param {Function} options.up - swipe up hander\n\t * @param {Function} options.down - swipe down hander\n\t * @param {Number} options.DIFF_THRESHOLD - movement should more than this\n\t * @param {Number} options.TIME_THRESHOLD - time should be more than this\n\t * @param {Number} options.MULTI_THRESHOLD - last multi-touch more than before\n\t */\n\tconstructor(options){\n\t\tthis.packagename = 'Craft.Core.Gesture.Swipe';\n\t\t\n\t\tthis.target = options.target;\n\t\t\n\t\tthis.target.addEventListener('touchstart', this.handleTouchStart.bind(this), false);        \n\t\tthis.target.addEventListener('touchmove', this.handleTouchMove.bind(this), false);\n\t\t\n\t\tthis.swipeLeftHandler  = options.left;\n\t\tthis.swipeRightHandler = options.right;\n\t\tthis.swipeUpHandler    = options.up;\n\t\tthis.swipeDownHandler  = options.down;\n\t\t\n\t\tthis.DIFF_THRESHOLD  = options.DIFF_THRESHOLD  || 50;\n\t\tthis.TIME_THRESHOLD  = options.TIME_THRESHOLD  || 40;\n\t\tthis.MULTI_THRESHOLD = options.MULTI_THRESHOLD || 60;\n\t\t\n\t\tthis.xDown = null;\n\t\tthis.yDown = null;\n\t\tthis.tDown = null;\n\t\t\n\t\tthis.lastMultiTouch = null;\n\t}\n\t\n\t/**\n\t * Called by touch start event\n\t * @param {TouchEvent} event - TouchEvent\n\t */\n\thandleTouchStart(event){\n\t\tlet firstTouch = event.touches[0];\n\t\tthis.xDown = firstTouch.clientX;\n\t\tthis.yDown = firstTouch.clientY;\n\t\tthis.tDown = Date.now();\n\t}\n\t\n\t/**\n\t * Called by touch end event\n\t * @param {TouchEvent} event - TouchEvent\n\t */\n\thandleTouchMove(event){\n\t\tif( !this.xDown || !this.yDown || !this.tDown ){\n\t\t\treturn;\n\t\t}\n\t\tif( event.touches.length > 1 ){\n\t\t\tthis.lastMultiTouch = Date.now();\n\t\t\treturn; // multi touch\n\t\t}\n\t\t\n\t\tlet xUp = event.touches[0].clientX;\n\t\tlet yUp = event.touches[0].clientY;\n\t\t\n\t\tlet xDiff = this.xDown - xUp;\n\t\tlet yDiff = this.yDown - yUp;\n\t\tlet tDiff = Date.now() - this.tDown;\n\t\tlet mDiff = Date.now() - this.lastMultiTouch;\n\t\t\n\t\tif( Math.abs(xDiff) + Math.abs(yDiff) < this.DIFF_THRESHOLD ){\n\t\t\treturn;\n\t\t}\n\t\tif( tDiff < this.TIME_THRESHOLD ){\n\t\t\treturn;\n\t\t}\n\t\tif( mDiff < this.MULTI_THRESHOLD ){\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif( Math.abs( xDiff ) > Math.abs( yDiff ) ){\n\t\t\tif( xDiff > 0 ){\n\t\t\t\tif( this.swipeLeftHandler ){ this.swipeLeftHandler(event); }\n\t\t\t}else{\n\t\t\t\tif( this.swipeRightHandler ){ this.swipeRightHandler(event); }\n\t\t\t}\n\t\t}else{\n\t\t\tif( yDiff > 0 ){\n\t\t\t\tif( this.swipeUpHandler ){ this.swipeUpHandler(event); }\n\t\t\t}else{ \n\t\t\t\tif( this.swipeDownHandler){ this.swipeDownHandler(event); }\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.xDown = null;\n\t\tthis.yDown = null;\n\t\tthis.tDown = null;\n\t}\n\t\n};\n\n\n//# sourceURL=webpack://Craft/./src/Craft/Core/Gesture.js?");

/***/ }),

/***/ "./src/Craft/Core/KeyboardManager.js":
/*!*******************************************!*\
  !*** ./src/Craft/Core/KeyboardManager.js ***!
  \*******************************************/
/*! exports provided: KeyboardManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyboardManager\", function() { return KeyboardManager; });\n\n/** \n * Global key-press event manager.  \n * Before you use this utility, you have to call `activate`.  \n * (You will call this in your bootstrap)\n * \n * You have to manage your registration key by yourself.\n * \n * @namespace Craft.Core.KeyboardManager\n * @packagename Craft.Core.KeyboardManager\n * \n * @example\n * \n * const ESC_KEY = 27;\n * \n * Craft.Core.KeyboardManager.activate();\n * \n * const action_id = 'action_name'+this.componentId;\n * \n * Craft.Core.KeyboardManager.register(action_id,ESC_KEY, () => {\n *     this.work_when_esc_pressed();\n *     Craft.Core.KeyboardManager.remove(action_id);\n * });\n * \n */\nvar KeyboardManager = {\n\t\n\t/** @private */\n\tpackagename : 'Craft.Core.KeyboardManager',\n\t\n\t/** @private */\n\tkeyboard_actions : {},\n\t\n\t/**\n\t * key-press handler\n\t * @private\n\t * @param {KeyboardEvent} e - KeyboardEvent\n\t */\n\thandler : function(e){\n\t\tCraft.Core.KeyboardManager.action(e.keyCode);\n\t},\n\t\n\t/**\n\t * Activate KeyboardManager\n\t * \n\t * @memberof Craft.Core.KeyboardManager\n\t * @method Craft.Core.KeyboardManager.activate\n\t */\n\tactivate : function(){\n\t\twindow.addEventListener('keyup',this.handler);\n\t},\n\t\n\t/**\n\t * Deactivate KeyboardManager\n\t */\n\tdeactivate : function(){\n\t\twindow.removeEventListener('keyup',this.handler);\n\t},\n\t\n\t/**\n\t * Register key-press handler\n\t * \n\t * @memberof Craft.Core.KeyboardManager\n\t * @method Craft.Core.KeyboardManager.register\n\t * \n\t * @param {String} id - identifier\n\t * @param {Number} key - key number ex) ESC:27\n\t * @param {Function} action - handler\n\t */\n\tregister : function(id,key,action){\n\t\tif( !(id && key && action) ){ return; }\n\t\tif( !this.keyboard_actions[key] ){\n\t\t\tthis.keyboard_actions[key] = {};\n\t\t}\n\t\tthis.keyboard_actions[key][id] = action;\n\t},\n\t\n\t/**\n\t * Remove key-press handler\n\t * \n\t * @memberof Craft.Core.KeyboardManager\n\t * @method Craft.Core.KeyboardManager.remove\n\t * \n\t * @param {String} id - identifier\n\t */\n\tremove : function(id){\n\t\tif( !id ){ return; }\n\t\t\n\t\tvar keys = Object.keys(this.keyboard_actions);\n\t\tfor( var i=0; i<keys.length; i++ ){\n\t\t\tdelete this.keyboard_actions[keys[i]][id];\n\t\t}\n\t},\n\t\n\t/**\n\t * Actual event handler\n\t * @private\n\t */\n\taction : function(key){\n\t\tif( !this.keyboard_actions[key] ){ return; }\n\t\tvar ids = Object.keys(this.keyboard_actions[key]);\n\t\tfor( var i=0; i<ids.length; i++ ){\n\t\t\tvar action = this.keyboard_actions[key][ids[i]];\n\t\t\taction();\n\t\t}\n\t},\n\t\n\t/**\n\t * Clear all handlers\n\t * \n\t * @memberof Craft.Core.KeyboardManager\n\t * @method Craft.Core.KeyboardManager.clear\n\t */\n\tclear : function(){\n\t\tthis.keyboard_actions = {};\n\t\tlet keys = Object.keys(this.keyboard_actions);\n\t\tfor( let i=0; i<keys.length; i++ ){\n\t\t\tlet key = keys[i];\n\t\t\tif( !this.keyboard_actions[key] ){ continue;\t}\n\t\t\tlet ids = Object.keys(this.keyboard_actions[key]);\n\t\t\tfor( let j=0; i<ids.length; j++ ){\n\t\t\t\tthis.remove(this.keyboard_actions[key][ids[j]]);\n\t\t\t}\n\t\t}\n\t}\n\t\n};\n\n\n//# sourceURL=webpack://Craft/./src/Craft/Core/KeyboardManager.js?");

/***/ }),

/***/ "./src/Craft/Core/NotificationCenter.js":
/*!**********************************************!*\
  !*** ./src/Craft/Core/NotificationCenter.js ***!
  \**********************************************/
/*! exports provided: NotificationCenter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NotificationCenter\", function() { return NotificationCenter; });\n\n/** \n * Global event manager.\n * \n * @namespace Craft.Core.NotificationCenter\n * @packagename Craft.Core.NotificationCenter\n * \n * @example\n * \n * // source\n * // you can use any keyword for your event name, and also can use wild card\n * \n * Craft.Core.NotificationCenter.notify('Entity/path.to.attribute.updated',message);\n * Craft.Core.NotificationCenter.notify('Entity/path.to.attribute.deleted',message);\n * Craft.Core.NotificationCenter.notify('Entity/path.to.*',message);\n * \n * // listener\n * // NotificationCenter returns serial id for your listener entry, that can be used to un-listen the event.\n * \n * const serial = Craft.Core.NotificationCenter.listen('Entity.updated',handler);\n * Craft.Core.NotificationCenter.notify('Entity.updated',handler);\n * \n * Craft.Core.NotificationCenter.remove('Entity.updated',serial);\n * \n */\nvar NotificationCenter = {\n\t\n\t/** @private */\n\tpackagename : 'Craft.Core.NotificationCenter',\n\t\n\t/** @private */\n\tEventListeners : {},\n\t\n\t/**\n\t * Actual listener registration\n\t * \n\t * @private\n\t * @param {String} event - event name\n\t * @param {Object} listener - listener definition\n\t */\n\tadd : function(event,listener){\n\t\tif( !this.EventListeners[event] ){\n\t\t\tthis.EventListeners[event] = { listeners:{}, serial:1 };\n\t\t}\n\t\tvar listeners = this.EventListeners[event].listeners;\n\t\tvar serial = this.EventListeners[event].serial++;\n\t\tlistener.serial = serial;\n\t\tlisteners[serial] = listener;\n\t\treturn serial;\n\t},\n\t\n\t/**\n\t * Register event listener\n\t * \n\t * @memberof Craft.Core.NotificationCenter\n\t * @method Craft.Core.NotificationCenter.listen\n\t * \n\t * @param {String} event - event name\n\t * @param {Function} handler - handler\n\t */\n\tlisten : function(event,handler){\n\t\tvar listener = { method:handler, once:false };\n\t\treturn this.add(event,listener);\n\t},\n\t\n\t/**\n\t * Register event listener only onece fired\n\t * \n\t * @memberof Craft.Core.NotificationCenter\n\t * @method Craft.Core.NotificationCenter.once\n\t * \n\t * @param {String} event - event name\n\t * @param {Function} handler - handler\n\t */\n\tonce : function(event,handler){\n\t\tvar listener = { method:handler, once:true };\n\t\treturn this.add(event,listener);\n\t},\n\t\n\t/**\n\t * Actual event trigger\n\t * \n\t * @private\n\t * @param {String} event - event name\n\t * @param {Object} obj - argument (optional)\n\t */\n\tdo_notify : function(event,obj){\n\t\tif( !this.EventListeners[event] ){ return; }\n\t\tvar listeners = this.EventListeners[event].listeners;\n\t\tvar serials = Object.keys(listeners);\n\t\tvar removes = [];\n\t\tfor( var i=0; i<serials.length; i++ ){\n\t\t\tvar serial   = serials[i];\n\t\t\tvar listener = listeners[serial];\n\t\t\tvar method   = listener.method;\n\t\t\tmethod(obj);\n\t\t\tif( listener.once ){\n\t\t\t\tremoves.push(serial);\n\t\t\t}\n\t\t}\n\t\tfor( var i=0; i<removes.length; i++ ){\n\t\t\tdelete listeners[removes[i]];\n\t\t}\n\t},\n\t\n\t/**\n\t * Fire event\n\t * \n\t * @memberof Craft.Core.NotificationCenter\n\t * @method Craft.Core.NotificationCenter.notify\n\t * \n\t * @param {String} event - event name\n\t * @param {Object} obj - argument (optional)\n\t */\n\tnotify : function(event,obj){\n\t\tvar event_names = Object.keys(this.EventListeners);\n\t\tvar hits = [];\n\t\tfor( var i=0; i<event_names.length; i++ ){\n\t\t\tvar event_name = event_names[i];\n\t\t\tvar pattern = event_name.replace(\"\\/\",\"\\\\/\").replace(\"\\.\",\"\\\\.\").replace(\"*\",\".*\");\n\t\t\tif( event.match(pattern) ){\n\t\t\t\thits.push(event_name);\n\t\t\t}\n\t\t}\n\t\tfor( var i=0; i<hits.length; i++ ){\n\t\t\tthis.do_notify(hits[i],obj);\n\t\t}\n\t},\n\t\n\t/**\n\t * Remove listener\n\t * \n\t * @memberof Craft.Core.NotificationCenter\n\t * @method Craft.Core.NotificationCenter.remove\n\t * \n\t * @param {String} event - event name\n\t * @param {Number} serial - serial id\n\t */\n\tremove : function(event,serial){\n\t\tif( !this.EventListeners[event] ){ return; }\n\t\tvar listeners = this.EventListeners[event].listeners;\n\t\tdelete listeners[serial];\n\t}\n\n};\n\n\n//# sourceURL=webpack://Craft/./src/Craft/Core/NotificationCenter.js?");

/***/ }),

/***/ "./src/Craft/Core/StickComponent.js":
/*!******************************************!*\
  !*** ./src/Craft/Core/StickComponent.js ***!
  \******************************************/
/*! exports provided: StickComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StickComponent\", function() { return StickComponent; });\n/* harmony import */ var _Component_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component.js */ \"./src/Craft/Core/Component.js\");\n\n\n\n/** \n * Component disabled auto componentId\n * \n * All of your instances will have static componentId based on your `packagename`. \n * This is for simplify your singleton object. \n * \n * @packagename Craft.Core.StickComponent\n */\nclass StickComponent extends _Component_js__WEBPACK_IMPORTED_MODULE_0__[\"Component\"] {\n\t\n\t/**\n\t * init method without serial number\n\t * \n\t * (highly recommended to be implemented as synchronous)\n\t */\n\tinit(){\n\t\tif( this.packagename ){\n\t\t\tthis.name = this.packagename.replace(/[\\/\\.]/g,'_'); // id should not have dot\n\t\t}else{\n\t\t\tthis.name = this.constructor.name;\n\t\t}\n\t\tthis.componentId = this.name;\n\t\tComponentStack.set(this.componentId,this);\n\t}\n\t\n}\n\n\n\n//# sourceURL=webpack://Craft/./src/Craft/Core/StickComponent.js?");

/***/ }),

/***/ "./src/Craft/Core/Transition.js":
/*!**************************************!*\
  !*** ./src/Craft/Core/Transition.js ***!
  \**************************************/
/*! exports provided: Transition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Transition\", function() { return Transition; });\n\n/** \n * Entry point for animation.\n * \n * @namespace Craft.Core.Transition\n * @packagename Craft.Core.Transition\n * \n * @example\n * \n * Craft.Core.Transition.animate({\n *     element : this.view.getElementById('anim_target');,\n *     properties : {\n *         top  : '100px',\n *         left : '150px',\n *     },\n *     duration : 200,   // number (msec)\n *     ease : 'ease-in',\n *     callback : () => {\n *         console.log('animation ended');\n *     }\n * });\n * \n */\nvar Transition = {\n\t\n\t/** @private */\n\tpackagename : 'Craft.Core.Transition',\n\t\n\t/**\n\t * Make animation\n\t * \n\t * @memberof Craft.Core.Transition\n\t * @method Craft.Core.Transition.animate\n\t * \n\t * @param {Object} options - animation paramaters\n\t * @param {Element} options.element - element\n\t * @param {Object} options.properties - css key-value: ex) top:'100px'\n\t * @param {Number} options.duration - msec\n\t * @param {Number} options.delay - msec\n\t * @param {String} options.ease - ease-in-out\n\t * @param {Function} options.callback - callback\n\t */\n\tanimate : function(options){\n\t\tnew Animator(options).animate();\n\t}\n\t\n};\n\n/** \n * Internal animation object\n * @access private\n */\nclass Animator {\n\t\n\t/**\n\t * Animation constructor\n\t * @param {Object} options - animation paramaters\n\t * @param {Element} options.element - element\n\t * @param {Object} options.properties - css key-value: ex) top:'100px'\n\t * @param {Number} options.duration - msec\n\t * @param {Number} options.delay - msec\n\t * @param {String} options.ease - ease-in-out\n\t * @param {Function} options.callback - callback\n\t */\n\tconstructor(options){\n\t\tthis.packagename = 'Craft.Core.Transition.Animator',\n\t\t\n\t\tthis.DEFAULT_DURATION = 150;\n\t\tthis.DEFAULT_EASE     = 'ease-in';\n\t\t\n\t\tthis.options = options;\n\t}\n\t\n\t/**\n\t * Do animation\n\t */\n\tanimate(){\n\t\tlet element    = this.options.element;\n\t\tlet properties = this.options.properties || {};\n\t\tlet duration   = this.options.duration   || this.DEFAULT_DURATION; // Number(msec)\n\t\tlet delay      = this.options.delay      || 0;\n\t\tlet ease       = this.options.ease       || this.DEFAULT_EASE;\n\t\tlet callback   = this.options.callback;\n\t\t\n\t\tif( !element ){ return; }\n\t\t\n\t\tlet animated = false;\n\t\tlet transitions = [];\n\t\tlet keys = Object.keys(properties);\n\t\tfor( let i=0; i<keys.length; i++ ){\n\t\t\ttransitions.push( keys[i] + ' ' + String(duration) + 'ms ' + ease + ' ' + delay + 'ms' );\n\t\t\tif( i === 0 ){\n\t\t\t\telement.style[keys[i]] = window.getComputedStyle(element).getPropertyValue(keys[i]); // force reflow once\n\t\t\t}\n\t\t}\n\t\tlet transition = transitions.join(', ');\n\t\t\n\t\telement.style.transition = transition;\n\t\t\n\t\tlet handler = function(event){\n\t\t\tif( animated ){ return; }\n\t\t\tanimated = true;\n\t\t\tclearTimeout(no_animation);\n\t\t\telement.removeEventListener('transitionend',handler);\n\t\t\telement.style.transition = '';\n\t\t\tif( callback ){ callback(); }\n\t\t};\n\t\telement.addEventListener('transitionend',handler);\n\t\tlet no_animation = setTimeout(handler, (parseInt(duration) + parseInt(delay) + 50) );\n\t\t\n\t\tkeys.map(function(key){\n\t\t\telement.style[key] = properties[key];\n\t\t});\n\t}\n\t\n};\n\n\n//# sourceURL=webpack://Craft/./src/Craft/Core/Transition.js?");

/***/ }),

/***/ "./src/Craft/UI/DefaultRootViewController.js":
/*!***************************************************!*\
  !*** ./src/Craft/UI/DefaultRootViewController.js ***!
  \***************************************************/
/*! exports provided: DefaultRootViewController */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultRootViewController\", function() { return DefaultRootViewController; });\n/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./View.js */ \"./src/Craft/UI/View.js\");\n/* harmony import */ var _Core_Component_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/Component.js */ \"./src/Craft/Core/Component.js\");\n/* harmony import */ var _DefaultViewController_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DefaultViewController.js */ \"./src/Craft/UI/DefaultViewController.js\");\n\n\n\n\n\n/** \n * Default RootViewContoller.\n * \n * Supports:\n * \n * * `didReceivePopstate` with seeking hash\n * * `pushState` to window.history.pushState\n * \n * @packagename Craft.UI.DefaultRootViewController\n * \n * @example\n * \n * class PageController extends Craft.UI.DefaultRootViewController {\n *     constructor(){\n *         super();\n *         this.tags = '';\n *         this.items = '';\n *     }\n *     viewDidLoad(callback){\n *         this.appendView(new Header());\n *         this.tags = new Tags();\n *         this.items = new Items();\n *         let container = new Container();\n *         container.loadView();\n *         container.appendView(this.tags);\n *         container.appendView(this.items);\n *         this.appendView(container);\n *         this.appendView(new Footer());\n *     }\n *     resolveRoutingRequest(path,event){\n *         if( !path ){ path = ''; }\n *         let match = path.match(/(\\w*)/);\n *         let tag = match[1];\n *         if( tag ){ this.selectTag(tag,event); }\n *     }\n *     selectTag(tag,event){\n *         if( !event ){\n *             // the event is popstate event object\n *             // you should update history if it is not passed.\n *             this.pushState({state:{tag:tag},path:'/#/'+tag});\n *         }\n *         document.title = \"Tag: \"+tag;\n *         this.items.selectTag(tag);\n *     }\n *     style(componentId){\n *         return `\n *             * { box-sizing:border-box; margin:0; padding:0; }\n *             .root { display:flex; flex-direction:column; width:75%; margin-left:auto; margin-right:auto; }\n *         `;\n *     }\n *     template(componentId){\n *         return `<div id=\"root\" class=\"root\"></div>`;\n *     }\n * }\n * \n */\nclass DefaultRootViewController extends _DefaultViewController_js__WEBPACK_IMPORTED_MODULE_2__[\"DefaultViewController\"] {\n\t\n\t/**\n\t * DefaultRootViewController Constructor  \n\t */\n\tconstructor(){\n\t\tsuper();\n\t\tthis.packagename = 'Craft.UI.DefaultRootViewController';\n\t}\n\t\n\t/**\n\t * Bringup routing by RootViewController  \n\t */\n\tbringup(){\n\t\tthis.didReceivePopstate(); // enter the routing\n\t}\n\t\n\t/**\n\t * Popstate event entrance\n\t * \n\t * By default, popstate event is managed as hash routing.  \n\t * Please implement your own strategy.\n\t * \n\t * @param {PopStateEvent} event - PopStateEvent should be handled by your DefaultRootViewController#resolveRoutingRequest\n\t */\n\tdidReceivePopstate(event){\n\t\tlet hash = window.location.hash;\n\t\tlet match = hash.match(/^#\\/(.*)/);\n\t\tlet path = '';\n\t\tif( match ){\n\t\t\tpath = match[1];\n\t\t}\n\t\tthis.resolveRoutingRequest(path,event);\n\t}\n\t\n\t/**\n\t * Register History (history.pushState)\n\t * \n\t * @param {Object} options - options\n\t * @param {Object} options.state - state\n\t * @param {String} options.path - path (hash)\n\t */\n\tpushState(options){\n\t\tlet state = options.state;\n\t\tlet path  = options.path;\n\t\twindow.history.pushState(state,null,path);\n\t}\n\t\n\t/**\n\t * Routing request handler.  \n\t * You have to implement your routing here.\n\t * \n\t * @param {String} path - path (hash by default)\n\t * @param {PopStateEvent} event - PopStateEvent is defined if this method is called via browser back|forward\n\t */\n\tresolveRoutingRequest(path,event){\n\t\t// here you should implement how to resolve popstate event\n\t}\n\t\n};\n\n\n\n//# sourceURL=webpack://Craft/./src/Craft/UI/DefaultRootViewController.js?");

/***/ }),

/***/ "./src/Craft/UI/DefaultViewController.js":
/*!***********************************************!*\
  !*** ./src/Craft/UI/DefaultViewController.js ***!
  \***********************************************/
/*! exports provided: DefaultViewController */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultViewController\", function() { return DefaultViewController; });\n/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./View.js */ \"./src/Craft/UI/View.js\");\n/* harmony import */ var _Core_ComponentStack_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/ComponentStack.js */ \"./src/Craft/Core/ComponentStack.js\");\n/* harmony import */ var _Core_Gesture_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Core/Gesture.js */ \"./src/Craft/Core/Gesture.js\");\n/* harmony import */ var _Core_NotificationCenter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Core/NotificationCenter.js */ \"./src/Craft/Core/NotificationCenter.js\");\n/* harmony import */ var _Core_Component_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Core/Component.js */ \"./src/Craft/Core/Component.js\");\n\n\n\n\n\n\n\n/** \n * Default ViewContoller.\n * \n * Supports:\n * \n * * Tap event (can be listen via NotificationCenter by name of 'ContentTapped')\n * * automatically register `this` to the appended Component.\n * * width and height fit to the viewport\n * \n * @packagename Craft.UI.DefaultViewController\n * \n * @example\n * \n * class PageController extends Craft.UI.DefaultViewController {\n *     constructor(){\n *         super();\n *         this.tags = '';\n *         this.items = '';\n *     }\n *     viewDidLoad(callback){\n *         this.appendView(new Header());\n *         this.appendView(new Container());\n *         this.appendView(new Footer());\n *     }\n *     style(componentId){\n *         return `\n *             * { box-sizing:border-box; margin:0; padding:0; }\n *             .root { display:flex; flex-direction:column; width:75%; margin-left:auto; margin-right:auto; }\n *         `;\n *     }\n *     template(componentId){\n *         return `<div id=\"root\" class=\"root\"></div>`;\n *     }\n * }\n * \n */\nclass DefaultViewController extends _View_js__WEBPACK_IMPORTED_MODULE_0__[\"View\"] {\n\t\n\t/**\n\t * DefaultViewController Constructor  \n\t */\n\tconstructor(){\n\t\tsuper();\n\t\tthis.packagename = 'Craft.UI.DefaultViewController';\n\t}\n\t\n\t/**\n\t * overriding viewDidLoad with 'ContentTapped' event on this.view\n\t * \n\t * When you override this method, you have to call `super.viewDidLoad()` at the start of yours, \n\t * and you have to call `callback` at the end of yours.\n\t * But if you don't want to enable 'ContentTapped' event, don't call `super.viewDidLoad`.\n\t * \n\t * @override\n\t * @param {Function} callback - callback\n\t * \n\t * @example\n\t * \n\t * viewDidLoad(callback){\n\t *     super.viewDidLoad();\n\t *     // your original logic\n\t *     if(callback){ callback(); }\n\t * }\n\t * \n\t */\n\tviewDidLoad(callback){\n\t\tthis.enableContentTapped();\n\t\tif( callback ){ callback(); }\n\t}\n\t\n\t/**\n\t * Append 'ContentTapped' event on `this.view`\n\t * @protected\n\t */\n\tenableContentTapped(){\n\t\t_Core_Gesture_js__WEBPACK_IMPORTED_MODULE_2__[\"Gesture\"].enableTap({\n\t\t\ttarget : this.view,\n\t\t\ttap    : (event) => {\n\t\t\t\t_Core_NotificationCenter_js__WEBPACK_IMPORTED_MODULE_3__[\"NotificationCenter\"].notify('ContentTapped',event);\n\t\t\t}\n\t\t});\n\t}\n\t\n\t/**\n\t * ovverride appendView: with viewController cascading\n\t * \n\t * @param {Object} options - options|component\n\t * @param {Craft.Core.Component} options.component - component (auto setViewController)\n\t */\n\tappendView(options){\n\t\tif( !options ){ return; }\n\t\tlet component;\n\t\tif( options instanceof _Core_Component_js__WEBPACK_IMPORTED_MODULE_4__[\"Component\"] ){\n\t\t\tcomponent = options;\n\t\t}else{\n\t\t\tcomponent = options.component;\n\t\t}\n\t\tcomponent.setViewController(this);\n\t\t\n\t\tsuper.appendView(options);\n\t}\n\t\n\t/**\n\t * ovverride append: with viewController cascading\n\t */\n\tappend(options){\n\t\tthis.appendView(options);\n\t}\n\t\n\t/**\n\t * Remove view\n\t */\n\tremoveView(options){\n\t\tsuper.removeView(options);\n\t}\n\t\n\t/**\n\t * style\n\t * @protected\n\t */\n\tstyle(){\n\t\treturn `\n\t\t\t* { box-sizing:border-box; margin:0; padding:0; }\n\t\t\t:host {\n\t\t\t\theight: 100%;\n\t\t\t\twidth: 100%;\n\t\t\t\tmargin: 0px;\n\t\t\t\toverflow: hidden;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}\n\t\t\t.root {\n\t\t\t\theight: 100%;\n\t\t\t\twidth: 100%;\n\t\t\t\tmargin: 0px;\n\t\t\t\toverflow: hidden;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}\n\t\t`;\n\t}\n\t\n\t/**\n\t * template\n\t * @protected\n\t */\n\ttemplate(){\n\t\treturn `\n\t\t\t<div class=\"root\"></div>\n\t\t`;\n\t}\n\t\n};\n\n\n\n//# sourceURL=webpack://Craft/./src/Craft/UI/DefaultViewController.js?");

/***/ }),

/***/ "./src/Craft/UI/Device.js":
/*!********************************!*\
  !*** ./src/Craft/UI/Device.js ***!
  \********************************/
/*! exports provided: Device */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Device\", function() { return Device; });\n\n/** \n * Provide device information \n * \n * @namespace Craft.UI.Device\n * @packagename Craft.UI.Device\n */\nvar Device = {\n\t\n\t/**\n\t * Report display cutout (quick and dirty)\n\t * \n\t * @memberof Craft.UI.Device\n\t * @method Craft.UI.Device.hasDisplayCutout\n\t * @return {Boolean} - true to the device has display cutout\n\t */\n\thasDisplayCutout : function(){\n\t\t\n\t\tlet iOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\n\t\tlet pixel_ratio = window.devicePixelRatio || 1;\n\t\tlet screen_width = window.screen.width * pixel_ratio;\n\t\tlet screen_height = window.screen.height * pixel_ratio;\n\t\t\n\t\tif( iOS && screen_width === 1125 && screen_height === 2436 ){\n\t\t\t// iPhone XS\n\t\t\treturn true;\n\t\t}else if( iOS && screen_width === 1242 && screen_height === 2688 ){\n\t\t\t// iPhone XS Max\n\t\t\treturn true;\n\t\t}else if( iOS && screen_width === 828 && screen_height === 1792 ){\n\t\t\t// iPhone XR\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n}\n\n\n\n//# sourceURL=webpack://Craft/./src/Craft/UI/Device.js?");

/***/ }),

/***/ "./src/Craft/UI/ModalViewController.js":
/*!*********************************************!*\
  !*** ./src/Craft/UI/ModalViewController.js ***!
  \*********************************************/
/*! exports provided: ModalViewController */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ModalViewController\", function() { return ModalViewController; });\n/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./View.js */ \"./src/Craft/UI/View.js\");\n/* harmony import */ var _Core_Transition_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Core/Transition.js */ \"./src/Craft/Core/Transition.js\");\n\n\n\n\n/** \n * ViewController for Modal.\n * \n * If you put full page content, \n * you have to set content background color by yourself to fill the safe area.\n * \n * ``` \n * modalViewController.setContent(modal_page);\n * modalViewController.contents.style['background-color'] = '#fff';\n * ``` \n * \n * @packagename Craft.UI.ModalViewController\n * \n * @example\n * \n * const modalViewController = new Craft.UI.ModalViewController();\n * modalViewController.loadView();\n * \n * const dialog = new Dialog({\n *     closeHandler : () => {\n *         modalViewController.hideContent( () => {\n *             dialog.unloadView();\n *             modalViewController.unloadView();\n *         });\n *     }\n * });\n * dialog.loadView();\n * \n * modalViewController.setContent(dialog);\n * \n * Craft.Core.Context.getRootViewController().appendView(modalViewController);\n * modalViewController.showContent();\n * \n */\nclass ModalViewController extends _View_js__WEBPACK_IMPORTED_MODULE_0__[\"View\"] {\n\t\n\t/**\n\t * ModalViewController Constructor\n\t * \n\t * You can customize modal behaviour via `this.MaskConfig` and `this.AnimationConfig`.  \n\t * See the code if needed.\n\t */\n\tconstructor(){\n\t\tsuper();\n\t\t\n\t\tthis.packagename = 'Craft.UI.ModalViewController';\n\t\t\n\t\tthis.MaskConfig = {};\n\t\tthis.MaskConfig.color = '#000';\n\t\tthis.MaskConfig.opacity = 0.5;\n\t\t\n\t\tthis.AnimationConfig = {};\n\t\tthis.AnimationConfig.duration  = 150;\n\t\tthis.AnimationConfig.delayShow = 0;\n\t\tthis.AnimationConfig.delayHide = 150;\n\t\t\n\t\tthis.mask = '';\n\t\tthis.container = '';\n\t\t\n\t\tthis.content = '';\n\t\tthis.viewController = '';\n\t}\n\t\n\t/**\n\t * override viewDidLoad: \n\t * @override\n\t * @param {Function} callback - callback\n\t */\n\tviewDidLoad(callback){\n\t\tthis.mask = this.shadow.getElementById('mask');\n\t\tthis.container = this.shadow.getElementById('container');\n\t\tthis.view.addEventListener('touchmove',(e) => { e.preventDefault(); });\n\t\tthis.mask.addEventListener('touchmove',(e) => { e.preventDefault(); });\n\t}\n\t\n\t/**\n\t * Set modal content\n\t * @param {Craft.Core.Component} component - component\n\t */\n\tsetContent(component){\n\t\tif( !component.isViewLoaded ){\n\t\t\tcomponent.loadView();\n\t\t}\n\t\tthis.content = component;\n\t\tthis.content.setViewController(this);\n\t\tthis.container.style['margin-top'] = String(window.screen.height)+'px';\n\t\tthis.container.innerHTML = '';\n\t\tthis.content.viewWillAppear();\n\t\tthis.container.appendChild(this.content.view);\n\t}\n\t\n\t/**\n\t * Show mask\n\t * @param {Function} callback - callback\n\t */\n\tshowMask(callback){\n\t\tthis.mask.style['display']          = 'block';\n\t\tthis.mask.style['opacity']          = this.MaskConfig.opacity;\n\t\tthis.mask.style['background-color'] = this.MaskConfig.color;\n\t\tif( callback ){ callback(); }\n\t}\n\t\n\t/**\n\t * Hide mask\n\t * @param {Function} callback - callback\n\t */\n\thideMask(callback){\n\t\t_Core_Transition_js__WEBPACK_IMPORTED_MODULE_1__[\"Transition\"].animate({\n\t\t\telement    : this.mask,\n\t\t\tproperties : { 'opacity': 0 },\n\t\t\tduration   : this.AnimationConfig.duration,\n\t\t\tdelay      : this.AnimationConfig.delayHide,\n\t\t\tcallback   : () => {\n\t\t\t\tthis.mask.style['display'] = 'none';\n\t\t\t\tif( callback ){ callback(); }\n\t\t\t},\n\t\t});\n\t}\n\t\n\t/**\n\t * Show modal content\n\t * @param {Function} callback - callback\n\t */\n\tshowContent(callback){\n\t\tthis.showMask();\n\t\tthis.content.viewDidAppear();\n\t\t_Core_Transition_js__WEBPACK_IMPORTED_MODULE_1__[\"Transition\"].animate({\n\t\t\telement    : this.container,\n\t\t\tproperties : { 'margin-top': '0px' },\n\t\t\tduration   : this.AnimationConfig.duration,\n\t\t\tdelay      : this.AnimationConfig.delayShow,\n\t\t\tcallback   : callback,\n\t\t});\n\t}\n\t\n\t/**\n\t * Hide modal content\n\t * @param {Function} callback - callback\n\t */\n\thideContent(callback){\n\t\tthis.hideMask();\n\t\tthis.content.viewWillDisappear();\n\t\t_Core_Transition_js__WEBPACK_IMPORTED_MODULE_1__[\"Transition\"].animate({\n\t\t\telement    : this.container,\n\t\t\tproperties : { 'margin-top': String(window.screen.height)+'px' },\n\t\t\tduration   : this.AnimationConfig.duration,\n\t\t\tdelay      : this.AnimationConfig.delay,\n\t\t\tcallback   : () => {\n\t\t\t\tthis.content.viewDidDisappear();\n\t\t\t\tthis.hideMask(callback);\n\t\t\t}\n\t\t});\n\t}\n\t\n\t/**\n\t * style\n\t * @protected\n\t */\n\tstyle(){\n\t\treturn `\n\t\t\t* { \n\t\t\t\tbox-sizing:border-box; margin:0; padding:0;\n\t\t\t}\n\t\t\t:host {\n\t\t\t\tposition: fixed;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 100vw;\n\t\t\t\theight: 100vh;\n\t\t\t\toverflow-x: hidden;\n\t\t\t\toverflow-y: hidden;\n\t\t\t\t-webkit-tap-highlight-color:rgba(0,0,0,0);\n\t\t\t\t-webkit-touch-callout: none;\n\t\t\t}\n\t\t\t.root {\n\t\t\t\twidth: 100vw;\n\t\t\t\theight: 100vh;\n\t\t\t\t-webkit-tap-highlight-color:rgba(0,0,0,0);\n\t\t\t\t-webkit-touch-callout: none;\n\t\t\t}\n\t\t\t.mask {\n\t\t\t\tposition: fixed;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 100vw;\n\t\t\t\theight: 100vh;\n\t\t\t\tpadding-top: env(safe-area-inset-top);\n\t\t\t\tpadding-bottom: env(safe-area-inset-bottom);\n\t\t\t\tbackground-color: #000;\n\t\t\t\topacity: 0.5;\n\t\t\t\toverflow-x: hidden;\n\t\t\t\toverflow-y: hidden;\n\t\t\t\t-webkit-tap-highlight-color:rgba(0,0,0,0);\n\t\t\t\t-webkit-touch-callout: none;\n\t\t\t}\n\t\t\t.container {\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0px;\n\t\t\t\tleft: 0px;\n\t\t\t\tmargin-top: 0px;\n\t\t\t\tpadding-top: env(safe-area-inset-top);\n\t\t\t\tpadding-bottom: env(safe-area-inset-bottom);\n\t\t\t\tmin-width: 100vw;\n\t\t\t\theight: 100vh;\n\t\t\t\tcolor: #000;\n\t\t\t\toverflow-x: hidden;\n\t\t\t\toverflow-y: hidden;\n\t\t\t}\n\t\t`;\n\t}\n\t\n\t/**\n\t * template\n\t * @protected\n\t */\n\ttemplate(){\n\t\treturn `\n\t\t\t<div class=\"root\">\n\t\t\t\t<div id=\"mask\" class=\"mask\"></div>\n\t\t\t\t<div id=\"container\" class=\"container\"></div>\n\t\t\t</div>\n\t\t`;\n\t}\n\t\n\n}\n\n\n//# sourceURL=webpack://Craft/./src/Craft/UI/ModalViewController.js?");

/***/ }),

/***/ "./src/Craft/UI/View.js":
/*!******************************!*\
  !*** ./src/Craft/UI/View.js ***!
  \******************************/
/*! exports provided: View */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"View\", function() { return View; });\n/* harmony import */ var _Core_Component_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Core/Component.js */ \"./src/Craft/Core/Component.js\");\n\n\n\n/** \n * View\n * \n * @packagename Craft.UI.View\n * \n * @example\n * \n * class Hello extends Craft.UI.View {\n *     constructor(){\n *         super();\n *         ths.name = 'World';\n *     }\n *     style(componentId){\n *         return `\n *             .${componentId} { font-size:1em; }\n *             .message_${componentId} { color:blue; }\n *         `;\n *     }\n *     template(componentId){\n *         return `\n *             <div id='${componentId}' class='${componentId}'>\n *                 <h1 class='message_${componentId}'>Hello ${this.name} !<\\h1>\n *             </div>\n *         `;\n *     }\n * }\n * \n */\nclass View extends _Core_Component_js__WEBPACK_IMPORTED_MODULE_0__[\"Component\"] {\n\t\n\t/**\n\t * Get the ViewController this component is managed by\n\t */\n\tgetViewController(){\n\t\treturn this.viewController;\n\t}\n\t\n\t/**\n\t * Set ViewController manages me.  \n\t * If you have more components under your RootView, you have to propagete the viewController for them.\n\t * \n\t * @param {Craft.Core.Component} viewController - any Component available\n\t */\n\tsetViewController(viewController){\n\t\tthis.viewController = viewController;\n\t}\n}\n\n\n\n//# sourceURL=webpack://Craft/./src/Craft/UI/View.js?");

/***/ })

/******/ });